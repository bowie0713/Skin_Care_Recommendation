knitr::opts_chunk$set(echo = TRUE)
library(httr)
library(jsonlite)
library(tidyverse)
url <- "https://sephora14.p.rapidapi.com/categories"
res <- VERB("GET", url, add_headers('x-rapidapi-key' = '526c5e0dc6msh087f830c8e919e9p1e88d8jsnaf27c82584b0', 'x-rapidapi-host' = 'sephora14.p.rapidapi.com'), content_type("application/octet-stream"))
response <- fromJSON(rawToChar(res$content))
skincare_df <-  as.data.frame(response)
skincare_df
skincare_labels <- c("Skincare", "Moisturizers", "Night Creams", "Cleansers", "Face Cleansers",
"Face Wash & Cleansers", "Exfoliators", "Toners", "Face Serums",
"Treatments", "Blemish & Acne Treatments", "Masks", "Face Masks",
"Facial Peel", "Sheet Masks", "Eye Masks", "Eye Care", "Eye Creams & Treatments",
"Sunscreen", "Face Sunscreen", "Body Sunscreen", "Acne & Blemishes",
"Anti-Aging", "Dark Spots", "Pores", "Dryness", "Fine Lines & Wrinkles",
"Dullness", "Clean Skincare", "Vegan Skincare", "Skincare Value & Gift Sets")
#not sure if should include mini sizes
skincare_df %>%
filter(categoryLabel %in% skincare_labels)
#now have to do GET requests for each categoryID...
url <- "https://sephora14.p.rapidapi.com/categories"
res <- VERB("GET", url, add_headers('x-rapidapi-key' = '526c5e0dc6msh087f830c8e919e9p1e88d8jsnaf27c82584b0', 'x-rapidapi-host' = 'sephora14.p.rapidapi.com'), content_type("application/octet-stream"))
response <- fromJSON(rawToChar(res$content))
skincare_df <-  as.data.frame(response)
skincare_df
skincare_labels <- c("Skincare", "Moisturizers", "Night Creams", "Cleansers", "Face Cleansers",
"Face Wash & Cleansers", "Exfoliators", "Toners", "Face Serums",
"Treatments", "Blemish & Acne Treatments", "Masks", "Face Masks",
"Facial Peel", "Sheet Masks", "Eye Masks", "Eye Care", "Eye Creams & Treatments",
"Sunscreen", "Face Sunscreen", "Body Sunscreen", "Acne & Blemishes",
"Anti-Aging", "Dark Spots", "Pores", "Dryness", "Fine Lines & Wrinkles",
"Dullness", "Clean Skincare", "Vegan Skincare", "Skincare Value & Gift Sets")
#not sure if should include mini sizes
skincare_df %>%
filter(categoryLabel %in% skincare_labels)
knitr::opts_chunk$set(echo = TRUE)
library(httr)
library(jsonlite)
library(tidyverse)
url <- "https://sephora14.p.rapidapi.com/categories"
res <- VERB("GET", url, add_headers('x-rapidapi-key' = '526c5e0dc6msh087f830c8e919e9p1e88d8jsnaf27c82584b0', 'x-rapidapi-host' = 'sephora14.p.rapidapi.com'), content_type("application/octet-stream"))
response <- fromJSON(rawToChar(res$content))
skincare_df <-  as.data.frame(response)
skincare_df
skincare_labels <- c("Skincare", "Moisturizers", "Night Creams", "Cleansers", "Face Cleansers",
"Face Wash & Cleansers", "Exfoliators", "Toners", "Face Serums",
"Treatments", "Blemish & Acne Treatments", "Masks", "Face Masks",
"Facial Peel", "Sheet Masks", "Eye Masks", "Eye Care", "Eye Creams & Treatments",
"Sunscreen", "Face Sunscreen", "Body Sunscreen", "Acne & Blemishes",
"Anti-Aging", "Dark Spots", "Pores", "Dryness", "Fine Lines & Wrinkles",
"Dullness", "Clean Skincare", "Vegan Skincare", "Skincare Value & Gift Sets")
#not sure if should include mini sizes
skincare_df %>%
filter(categoryLabel %in% skincare_labels)
url <- "https://sephora14.p.rapidapi.com/categories"
#res <- VERB("GET", url, add_headers('x-rapidapi-key' = '526c5e0dc6msh087f830c8e919e9p1e88d8jsnaf27c82584b0', 'x-rapidapi-host' = 'sephora14.p.rapidapi.com'), content_type("application/octet-stream"))
response <- fromJSON(rawToChar(res$content))
skincare_df <-  as.data.frame(response)
skincare_df
skincare_labels <- c("Skincare", "Moisturizers", "Night Creams", "Cleansers", "Face Cleansers",
"Face Wash & Cleansers", "Exfoliators", "Toners", "Face Serums",
"Treatments", "Blemish & Acne Treatments", "Masks", "Face Masks",
"Facial Peel", "Sheet Masks", "Eye Masks", "Eye Care", "Eye Creams & Treatments",
"Sunscreen", "Face Sunscreen", "Body Sunscreen", "Acne & Blemishes",
"Anti-Aging", "Dark Spots", "Pores", "Dryness", "Fine Lines & Wrinkles",
"Dullness", "Clean Skincare", "Vegan Skincare", "Skincare Value & Gift Sets")
#not sure if should include mini sizes
skincare_df %>%
filter(categoryLabel %in% skincare_labels)
library(httr)
install.packages("rvest")
library(rvest)
library(jsonlite)
library(tidyverse)
```{r}
url <- "https://sephora14.p.rapidapi.com/categories"
#res <- VERB("GET", url, add_headers('x-rapidapi-key' = '526c5e0dc6msh087f830c8e919e9p1e88d8jsnaf27c82584b0', 'x-rapidapi-host' = 'sephora14.p.rapidapi.com'), content_type("application/octet-stream"))
response <- fromJSON(rawToChar(res$content))
skincare_df <-  as.data.frame(response)
skincare_df
skincare_labels <- c("Skincare", "Moisturizers", "Night Creams", "Cleansers", "Face Cleansers",
"Face Wash & Cleansers", "Exfoliators", "Toners", "Face Serums",
"Treatments", "Blemish & Acne Treatments", "Masks", "Face Masks",
"Facial Peel", "Sheet Masks", "Eye Masks", "Eye Care", "Eye Creams & Treatments",
"Sunscreen", "Face Sunscreen", "Body Sunscreen", "Acne & Blemishes",
"Anti-Aging", "Dark Spots", "Pores", "Dryness", "Fine Lines & Wrinkles",
"Dullness", "Clean Skincare", "Vegan Skincare", "Skincare Value & Gift Sets")
#not sure if should include mini sizes
skincare_df %>%
filter(categoryLabel %in% skincare_labels)
library(httr)
library(rvest)
library(jsonlite)
library(tidyverse)
skincare_df
library(httr)
library(rvest)
library(jsonlite)
library(tidyverse)
url <- "https://www.sephora.com/shop/facial-treatments"
# Read the HTML content from the URL
webpage <- read_html(url)
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
summary(geyser$waiting)
carbajal <- read.table("Carbajal.txt", header=TRUE)
library(MASS)
summary(geyser$waiting)
carbajal <- read.table("Carbajal.txt", header=TRUE)
summary(carbajal$Donation)
waiting_time <- geyser$waiting
waiting_time <- geyser$waiting
mix_den <- function(x){
(1/3)*dnorm(x, mean = 52, sd =7) +(2/3)*dnorm(x, mean = 80,, sd = 7)
}
seq_x <- seq(min(waiting_time), max(waiting_time), length.out = 1000)
waiting_time <- geyser$waiting
mix_den <- function(x){
(1/3)*dnorm(x, mean = 52, sd =7) +(2/3)*dnorm(x, mean = 80,, sd = 7)
}
seq_x <- seq(min(waiting_time), max(waiting_time), length.out = 1000)
y(density_values) <- mix_den(seq_x)
waiting_time <- geyser$waiting
mix_den <- function(x){
(1/3)*dnorm(x, mean = 52, sd =7) +(2/3)*dnorm(x, mean = 80,, sd = 7)
}
seq_x <- seq(min(waiting_time), max(waiting_time), length.out = 1000)
y_density_values <- mix_den(seq_x)
geom_line(data = carbajal, aes(x=x, y=y), col = "orange")
waiting_time <- geyser$waiting
mix_den <- function(x){
(1/3)*dnorm(x, mean = 52, sd =7) +(2/3)*dnorm(x, mean = 80,, sd = 7)
}
seq_x <- seq(min(waiting_time), max(waiting_time), length.out = 1000)
y_density_values <- mix_den(seq_x)
geom_line(data = carbajal, aes(x=seq_x, y=y_density_values), col = "orange")
waiting_time <- geyser$waiting
mix_den <- function(x){
(1/3)*dnorm(x, mean = 52, sd =7) +(2/3)*dnorm(x, mean = 80,, sd = 7)
}
seq_x <- seq(min(waiting_time), max(waiting_time), length.out = 1000)
y_density_values <- mix_den(seq_x)
geom_line(data = carbajal, aes(x=x, y=y), col = "orange")
#CDF always for ks test
mix_den <- function(x){
(1/3)*pnorm(x, mean = 52, sd =7) +(2/3)*pnorm(x, mean = 80,, sd = 7)
}
trans_waiting <- min_cdf(geyser$waiting)
knitr::opts_chunk$set(echo = TRUE)
reticulate::repl_python()
knitr::opts_chunk$set(echo = TRUE)
reticulate::repl_python()
library(reticulate)
reticulate::repl_python()
library(rvest)
library(jsonlite)
library(tidyverse)
reticulate::repl_python()
urls <- sitemap_html %>%
html_element("loc")
reticulate::repl_python()
py$sitemap_html
py$rows
py$rows <- py$rows[contains("acne")]
py$rows %>%
filter(
contains("acne")
)
?contains
contains(py$rows, "acne")
py$rows <- data.frame(py$rows)
reticulate::repl_python()
