geom_smooth(method = "loess", se = FALSE, color = "blue") +
facet_wrap(~Taxon, scales = "free")
sst_v_diatoms_plot
sst_v_diatoms_plot <- diatoms3 %>%
pivot_longer(cols = A_curv:StephanSpp,
names_to = "taxon",
values_to = "relative_abundance") %>%
ggplot(aes(x = sst_pred, y = relative_abundance)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "loess", se = FALSE, color = "blue") +
facet_wrap(~ taxon, scales = "free")
sst_v_diatoms_plot
sst_v_diatoms_plot <- diatoms3 %>%
pivot_longer(cols = A_curv:StephanSpp,
names_to = "taxon",
values_to = "relative_abundance") %>%
ggplot(aes(x = sst_pred, y = relative_abundance)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "loess", se = FALSE, color = "blue") +
facet_wrap(~ taxon, scales = "free") +
labs(x = "Predicted Sea Surface Temperature",
y = "Relative Abundance of Diatom Taxa",
title = "Relationship Between Predicted SST and Diatom Abundance")
sst_v_diatoms_plot
# Create correlation matrix and plot it
diatoms3 %>%
corrplot(diag = FALSE)
diatoms3
# Create correlation matrix and plot it
diatoms3 %>%
select(starts_with("A_"|ends_with("Spp")))
# Create correlation matrix and plot it
diatoms3 %>%
select(starts_with(A_|ends_with(Spp)))
# Create correlation matrix and plot it
diatoms3 %>%
select(starts_with("A_"))
# Create correlation matrix and plot it
diatoms3 %>%
select(starts_with("A_")|ends_with("Spp"))
# Create correlation matrix and plot it
diatoms3 %>%
select(starts_with("A_")|ends_with("Spp")) %>%
corrplot()
# Create correlation matrix and plot it
diatoms3 %>%
select(starts_with("A_")|ends_with("Spp")) %>%
corrplot(diag = FALSE)
library(corrplot)
# Create correlation matrix and plot it
diatoms3 %>%
select(starts_with("A_")|ends_with("Spp")) %>%
corrplot(diag = FALSE)
# Create correlation matrix and plot it
diatoms3 %>%
select(starts_with("A_")|ends_with("Spp")) %>%
cor(diatom_abundances, use = "pairwise.complete.obs", method = "pearson") %>%
corrplot()
# Create correlation matrix and plot it
diatoms3 %>%
select(starts_with("A_")|ends_with("Spp")) %>%
cor( use = "pairwise.complete.obs", method = "pearson") %>%
corrplot()
# Create correlation matrix and plot it
diatoms3 %>%
select(starts_with("A_")|ends_with("Spp")) %>%
cor(use = "pairwise.complete.obs", method = "pearson") %>%
corrplot()
# Create correlation matrix and plot it
diatoms3 %>%
select(starts_with("A_")|ends_with("Spp")) %>%
cor(use = "pairwise.complete.obs", method = "pearson", diag = "FALSE") %>%
corrplot()
library(corrplot)
# Create correlation matrix and plot it
diatoms3 %>%
select(starts_with("A_")|ends_with("Spp")) %>%
cor(use = "pairwise.complete.obs", method = "pearson") %>%
corrplot(diag = "FALSE")
library(corrplot)
# Create correlation matrix and plot it
diatoms3 %>%
select(starts_with("A_")|ends_with("Spp")) %>%
cor(use = "pairwise.complete.obs", method = "pearson") %>%
corrplot()
diatoms3
# Create correlation matrix and plot it
diatoms3 %>%
select(starts_with("A_")|ends_with("Spp")) %>%
cor(use = "pairwise.complete.obs", method = "pearson") %>%
corrplot(diag = FALSE)
diatoms3
# Create correlation matrix and plot it
diatoms3 %>%
select(starts_with("A_")|ends_with("Spp")|ends_with("tess")) %>%
cor(use = "pairwise.complete.obs", method = "pearson") %>%
corrplot(diag = FALSE)
diatom_pca <- diatoms3 |>
select(A_curv:StephanSpp) |>  # Remove non-species variables
prcomp(scale=TRUE)
pca_var <- tibble(pc = 1:8,
eval = diatom_pca$sdev^2) |>
mutate(var_explained = eval^2/sum(eval^2),
cum_var_explained = cumsum(var_explained))
diatom_pca <- diatoms3 |>
select(A_curv:StephanSpp) |>  # Remove non-species variables
prcomp(scale=TRUE)
pca_var <- tibble(pc = 1:8,
eval = diatom_pca$sdev^2) |>
mutate(var_explained = eval^2/sum(eval^2),
cum_var_explained = cumsum(var_explained))
var_exp_plot <- pca_var %>%
ggplot(aes(x = var_explained)) +
geom_col()
var_exp_plot
var_exp_plot <- pca_var %>%
ggplot(aes(y = var_explained, x = pc)) +
geom_col()
var_exp_plot
cum_var_exp_plot <- pct_var %>%
ggplot(aes(y = cum_var_explained, x = pc)) +
geom_line() +
ylim(0,1)
var_exp_plot <- pca_var %>%
ggplot(aes(y = var_explained, x = pc)) +
geom_col()
cum_var_exp_plot <- pca_var %>%
ggplot(aes(y = cum_var_explained, x = pc)) +
geom_line() +
ylim(0,1)
var_exp_plot + cum_var_exp_plot
var_exp_plot <- pca_var %>%
ggplot(aes(y = var_explained, x = pc)) +
geom_col() +
labs(x = "Principal Component",
y = "Variance Explained",
title = "Variance Explained by Each PC")
cum_var_exp_plot <- pca_var %>%
ggplot(aes(y = cum_var_explained, x = pc)) +
geom_line() +
ylim(0,1) +
labs(x = "Principal Component",
y = "Cumulative Variance Explained",
title = "Cumulative Variance Explained by Each PC")
var_exp_plot + cum_var_exp_plot
library(patchwork)
# Get loadings and scores
loadings <- pca_var$rotation[,1:2]
library(patchwork)
library(patchwork)
# Get loadings and scores
loadings <- pca_var$rotation[,1:2]
# Get loadings and scores
loadings <- pca_var$rotation[,1:2]
diatom_pca <- diatoms3 |>
select(A_curv:StephanSpp) |>  # Remove non-species variables
prcomp(scale=TRUE)
pca_var <- tibble(pc = 1:8,
eval = diatom_pca$sdev^2) |>
mutate(var_explained = eval^2/sum(eval^2),
cum_var_explained = cumsum(var_explained))
# Get loadings and scores
loadings <- pca_var$rotation[,1:2]
# Get loadings and scores
loadings <- diatom_pca$rotation[,1:2]
loadings
# Get loadings and scores
loadings <- diatom_pca$rotation[,1:2] %>%
tibble::rownames_to_column(var = "Variable")
# Get loadings and scores
loadings <- diatom_pca$rotation[,1:2] %>%
as.data.frame() %>%
tibble::rownames_to_column(var = "Variable")
loadings
diatom_pca$rotation[, 1:2] %>%  # Select first two principal components
as_tibble(rownames = "Taxon") %>%  # Convert row names to a column
rename(PC1 = V1, PC2 = V2)
diatom_pca$rotation[, 1:2] %>%  # Select first two principal components
as_tibble(rownames = "Taxon")
# Get loadings and scores
loadings <- diatom_pca$rotation[,1:2] %>%
as.data.frame() %>%
tibble::rownames_to_column(var = "Taxon")
loadings
pc1_loadings <-  loadings[,1]
pc1_loadings
pc1_loadings <-  loadings[loadings[,1] ]
pc1_loadings <-  <- loadings %>%
pc1_loadings <- loadings %>%
select(Taxon, PC1)
pc1_loadings
pc2_loadings <-  loadings %>%
select(Taxon, PC2)
pc1_loadings / pc2_loadings
pc2_loadings <-  loadings %>%
select(PC2)
pc1_loadings <- loadings %>%
select(PC1)
px1_loadings
pc1_loadings
pc1_loadings / pc2_loadings
pc1_loadings <- ggplot(loadings, aes(x = reorder(Taxon, PC1), y = PC1, fill = PC1)) +
geom_col() +
coord_flip() +  # Flip coordinates for better readability
labs(x = "Taxon", y = "PC1 Loadings", title = "Principal Component 1 Loadings") +
theme_minimal()
library(patchwork)
# Get loadings and scores
loadings <- diatom_pca$rotation[,1:2] %>%
as.data.frame() %>%
tibble::rownames_to_column(var = "Taxon")
pc1_loadings <- ggplot(loadings, aes(x = reorder(Taxon, PC1), y = PC1, fill = PC1)) +
geom_col() +
coord_flip() +
labs(x = "Taxon", y = "PC1 Loadings", title = "Principal Component 1 Loadings") +
theme_minimal()
pc2_loadings <- ggplot(loadings, aes(x = reorder(Taxon, PC2), y = PC2, fill = PC2)) +
geom_col() +
coord_flip() +
labs(x = "Taxon", y = "PC2 Loadings", title = "Principal Component 2 Loadings") +
theme_minimal()
pc1_loadings / pc2_loadings
library(patchwork)
# Get loadings and scores
loadings <- diatom_pca$rotation[,1:2] %>%
as.data.frame() %>%
tibble::rownames_to_column(var = "Taxon")
pc1_loadings <- ggplot(loadings, aes(x = reorder(Taxon, PC1), y = PC1)) +
geom_col() +
coord_flip() +
labs(x = "Taxon", y = "PC1 Loadings", title = "Principal Component 1 Loadings") +
theme_minimal()
pc2_loadings <- ggplot(loadings, aes(x = reorder(Taxon, PC2), y = PC2)) +
geom_col() +
coord_flip() +
labs(x = "Taxon", y = "PC2 Loadings", title = "Principal Component 2 Loadings") +
theme_minimal()
pc1_loadings / pc2_loadings
pc1_loadings <- ggplot(loadings, aes(x = reorder(Taxon, PC1), y = PC1), color = "blue") +
geom_col() +
coord_flip() +
labs(x = "Taxon", y = "PC1 Loadings", title = "Principal Component 1 Loadings") +
theme_minimal()
pc1_loadings / pc2_loadings
pc1_loadings <- ggplot(loadings, aes(x = reorder(Taxon, PC1), y = PC1), fill = "blue") +
geom_col() +
coord_flip() +
labs(x = "Taxon", y = "PC1 Loadings", title = "Principal Component 1 Loadings") +
theme_minimal()
library(patchwork)
# Get loadings and scores
loadings <- diatom_pca$rotation[,1:2] %>%
as.data.frame() %>%
tibble::rownames_to_column(var = "Taxon")
pc1_loadings <- ggplot(loadings, aes(x = reorder(Taxon, PC1), y = PC1), fill = PC1) +
geom_col() +
coord_flip() +
labs(x = "Taxon", y = "PC1 Loadings", title = "Principal Component 1 Loadings") +
theme_minimal()
pc2_loadings <- ggplot(loadings, aes(x = reorder(Taxon, PC2), y = PC2), fill = PC2) +
geom_col() +
coord_flip() +
labs(x = "Taxon", y = "PC2 Loadings", title = "Principal Component 2 Loadings") +
theme_minimal()
pc1_loadings / pc2_loadings
library(patchwork)
# Get loadings and scores
loadings <- diatom_pca$rotation[,1:2] %>%
as.data.frame() %>%
tibble::rownames_to_column(var = "Taxon")
pc1_loadings <- ggplot(loadings, aes(x = reorder(Taxon, PC1), y = PC1, fill = PC1)) +
geom_col() +
coord_flip() +
labs(x = "Taxon", y = "PC1 Loadings", title = "Principal Component 1 Loadings") +
theme_minimal()
pc2_loadings <- ggplot(loadings, aes(x = reorder(Taxon, PC2), y = PC2, fill = PC2)) +
geom_col() +
coord_flip() +
labs(x = "Taxon", y = "PC2 Loadings", title = "Principal Component 2 Loadings") +
theme_minimal()
pc1_loadings / pc2_loadings
library(patchwork)
# Get loadings and scores
loadings <- diatom_pca$rotation[,1:2] %>%
as.data.frame() %>%
tibble::rownames_to_column(var = "Taxon")
pc1_loadings <- ggplot(loadings, aes(x = PC1), y = PC1, fill = PC1)) +
library(patchwork)
# Get loadings and scores
loadings <- diatom_pca$rotation[,1:2] %>%
as.data.frame() %>%
tibble::rownames_to_column(var = "Taxon")
pc1_loadings <- ggplot(loadings, aes(x = PC1), y = PC1, fill = PC1) +
geom_col() +
coord_flip() +
labs(x = "Taxon", y = "PC1 Loadings", title = "Principal Component 1 Loadings") +
theme_minimal()
pc2_loadings <- ggplot(loadings, aes(x = PC2), y = PC2, fill = PC2) +
geom_col() +
coord_flip() +
labs(x = "Taxon", y = "PC2 Loadings", title = "Principal Component 2 Loadings") +
theme_minimal()
pc1_loadings / pc2_loadings
library(patchwork)
# Get loadings and scores
loadings <- diatom_pca$rotation[,1:2] %>%
as.data.frame() %>%
tibble::rownames_to_column(var = "Taxon")
pc1_loadings <- ggplot(loadings, aes(x = PC1, y = PC1, fill = PC1))+
geom_col() +
coord_flip() +
labs(x = "Taxon", y = "PC1 Loadings", title = "Principal Component 1 Loadings") +
theme_minimal()
pc2_loadings <- ggplot(loadings, aes(x = PC2, y = PC2, fill = PC2)) +
geom_col() +
coord_flip() +
labs(x = "Taxon", y = "PC2 Loadings", title = "Principal Component 2 Loadings") +
theme_minimal()
pc1_loadings / pc2_loadings
library(patchwork)
# Get loadings and scores
loadings <- diatom_pca$rotation[,1:2] %>%
as.data.frame() %>%
tibble::rownames_to_column(var = "Taxon")
pc1_loadings <- ggplot(loadings, aes(x = reorder(Taxon, PC1), y = PC1, fill = PC1)) +
geom_col() +
coord_flip() +
labs(x = "Taxon", y = "PC1 Loadings", title = "Principal Component 1 Loadings") +
theme_minimal()
pc2_loadings <- ggplot(loadings, aes(x = reorder(Taxon, PC2), y = PC2, fill = PC2)) +
geom_col() +
coord_flip() +
labs(x = "Taxon", y = "PC2 Loadings", title = "Principal Component 2 Loadings") +
theme_minimal()
pc1_loadings / pc2_loadings
# Visualize results
projected_data %>%
diatom_pca$x[, 1:2] %>%  # Extract the first two PCs
as.dataframe()
# Visualize results
projected_data %>%
as.dataframe() %>%
diatom_pca$x[, 1:2] %>%  # Extract the first two PCs
pc_scores_plot <- # SOLUTION
pc_scores_plot
# Visualize results
projected_data %>%
as.dataframe() %>%
diatom_pca$x[, 1:2]  # Extract the first two PCs
# Visualize results
projected_data %>%
as_dataframe() %>%
diatom_pca$x[, 1:2]  # Extract the first two PCs
# Visualize results
projected_data %>%
asdata.frame() %>%
diatom_pca$x[, 1:2]  # Extract the first two PCs
# Visualize results
projected_data %>%
as.data.frame() %>%
diatom_pca$x[, 1:2]  # Extract the first two PCs
# Visualize results
projected_data <- diatom_pca %>%
as.data.frame() %>%
diatom_pca$x[, 1:2]  # Extract the first two PCs
# Visualize results
projected_data <- diatom_pca %>%
diatom_pca$x[, 1:2]  # Extract the first two PCs
# Visualize results
projected_data <-
diatom_pca$x[, 1:2]  # Extract the first two PCs
# Visualize results
projected_data <- as.dataframe() %>%
diatom_pca$x[, 1:2] # Extract the first two PCs
# Visualize results
projected_data <- as.data.frame() %>%
diatom_pca$x[, 1:2] # Extract the first two PCs
# Visualize results
projected_data <- as.data.frame() %>%
diatom_pca$x[, 1:2] # Extract the first two PCs
# Visualize results
projected_data <- diatom_pca$x[, 1:2] %>%  # Extract the first two PCs
as.data.frame() %>%
tibble::rownames_to_column(var = "Taxon")
projected_data
# Visualize results
projected_data <- diatom_pca$x[, 1:2] %>%  # Extract the first two PCs
as.data.frame()
projected_data
# Visualize results
projected_data <- diatom_pca$x[, 1:2] %>%  # Extract the first two PCs
as.data.frame() %>%
mutate(Epoch = ifelse((Age>= - 14.7) & (Age <= -12.9), "Pleistocene", "Holocene" ))
# Visualize results
projected_data <- diatom_pca$x[, 1:2] %>%  # Extract the first two PCs
as.data.frame() %>%
mutate(Age = diatoms3$Age) %>%
mutate(Epoch = ifelse(Age < -11, "Pleistocene", "Holocene"))
projected_data
# Visualize results
projected_data <- diatom_pca$x[, 1:2] %>%  # Extract the first two PCs
as.data.frame() %>%
mutate(Age = diatoms3$Age,
Epoch = ifelse(Age < -11, "Pleistocene", "Holocene"))
pc_scores_plot <- projected_data %>%
ggplot(aes(x = PC1, y = PC2, color = Epoch)) +
geom_point() +
pc_scores_plot
pc_scores_plot <- projected_data %>%
ggplot(aes(x = PC1, y = PC2, color = Epoch)) +
geom_point()
pc_scores_plot
pc_scores_plot <- projected_data %>%
ggplot(aes(x = PC1, y = PC2, color = Epoch)) +
geom_point(alpha = 0.6)
pc_scores_plot
pc_scores_plot <- projected_data %>%
ggplot(aes(x = PC1, y = PC2, color = Epoch)) +
geom_point(alpha = 0.6) +
labs(
title = "PCA Scores: PC1 vs. PC2",
x = "Principal Component 1",
y = "Principal Component 2",
color = "Epoch"
) +
theme_minimal()
pc_scores_plot
library(ggExtra)
install.packages("ggExtra")
library(ggExtra)
pc_scores_plot %>%
ggMarginal(groupFill = TRUE)
projected_data %>%
ggplot(aes(x = PC1, y = PC2, color = Epoch)) +
geom_point(alpha = 0.6) +
ggMarginal(groupFill = TRUE) +
labs(
title = "PCA Scores: PC1 vs. PC2",
x = "Principal Component 1",
y = "Principal Component 2",
color = "Epoch"
) +
theme_minimal()
projected_data %>%
ggplot(aes(x = PC1, y = PC2, color = Epoch)) +
geom_point(alpha = 0.6) +
ggMarginal(groupFill = TRUE) +
labs(
title = "PCA Scores: PC1 vs. PC2",
x = "Principal Component 1",
y = "Principal Component 2",
color = "Epoch"
) +
theme_minimal()
library(ggExtra)
pc_scores_plot %>%
ggMarginal(groupFill = TRUE)
projected_data %>%
ggplot(aes(x = PC1, y = PC2, color = Epoch)) +
geom_point(alpha = 0.6) %>%
ggMarginal(groupFill = TRUE) +
labs(
title = "PCA Scores: PC1 vs. PC2",
x = "Principal Component 1",
y = "Principal Component 2",
color = "Epoch"
) +
theme_minimal()
projected_data %>%
ggplot(aes(x = PC1, y = PC2, color = Epoch)) +
geom_point(alpha = 0.6) %>%
ggMarginal(groupFill = TRUE) +
labs(
title = "PCA Scores: PC1 vs. PC2",
x = "Principal Component 1",
y = "Principal Component 2",
color = "Epoch"
) +
theme_minimal()
ggMarginal(
pc_scores_plot,
type = "density",  # Add density plots
groupFill = TRUE   # Color density plots by Epoch
)
pc_scores_plot %>%
ggMarginal(groupFill = TRUE)
diatoms3 %>%
ggplot(aes(x = A_nodul, fill = Age_Comp)) +
geom_density(alpha = 0.6) +
labs(
x = "Relative Abundance of Azpeitia nodulifer",
y = "Density",
title = "Density Plot of Azpeitia nodulifer Relative Abundance\nBefore and After 11KyrBP"
) +
scale_fill_manual(values = c("Before" = "blue", "After" = "red"),
labels = c("Before 11KyrBP", "After 11KyrBP")) +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
library(httr)
library(rvest)
library(jsonlite)
library(tidyverse)
reticulate::repl_python()
knitr::opts_chunk$set(echo = TRUE)
library(httr)
library(rvest)
library(jsonlite)
library(tidyverse)
reticulate::repl_python()
#save sitemap
save(sitemap_html, file = "sitemap.html")
reticulate::repl_python()
